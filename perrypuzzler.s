;
; File generated by cc65 v 2.18 - N/A
;
	.fopt		compiler,"cc65 v 2.18 - N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_bg
	.import		_pal_spr
	.import		_ppu_wait_nmi
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_oam_clear
	.import		_oam_meta_spr
	.import		_pad_poll
	.import		_bank_spr
	.import		_memcpy
	.import		_set_vram_buffer
	.import		_one_vram_buffer
	.import		_multi_vram_buffer_horz
	.import		_clear_vram_buffer
	.import		_get_pad_new
	.import		_pal_fade_to
	.import		_set_scroll_y
	.import		_get_ppu_addr
	.import		_set_data_pointer
	.import		_set_mt_pointer
	.import		_buffer_4_mt
	.import		_flush_vram_update2
	.export		_perrystandright_data
	.export		_perrystandleft_data
	.export		_perrywalkright0_data
	.export		_perrywalkright1_data
	.export		_perrywalkright2_data
	.export		_perrywalkleft0_data
	.export		_perrywalkleft1_data
	.export		_perrywalkleft2_data
	.export		_perrywalkdown0_data
	.export		_perrywalkdown1_data
	.export		_perrywalkdown2_data
	.export		_perrywalkup0_data
	.export		_perrywalkup1_data
	.export		_perrywalkup2_data
	.export		_nudeman_data
	.export		_Duck_data
	.export		_switchleft_data
	.export		_switchright_data
	.export		_lighton_data
	.export		_lightoff_data
	.export		_rock_data
	.export		_perryflag0_data
	.export		_perryflag1_data
	.export		_perryflag2_data
	.export		_blankflag0_data
	.export		_blankflag1_data
	.export		_blankflag2_data
	.export		_titletailwag0_data
	.export		_titletailwag1_data
	.export		_titletailwag2_data
	.export		_GoalFlag
	.export		_pad1
	.export		_pad1_new
	.export		_pad2
	.export		_pad2_new
	.export		_collision
	.export		_collision_L
	.export		_collision_R
	.export		_collision_U
	.export		_collision_D
	.export		_collision2
	.export		_level
	.export		_p_maps
	.export		_coordinates
	.export		_temp1
	.export		_temp2
	.export		_temp3
	.export		_temp4
	.export		_temp_x
	.export		_temp_y
	.export		_game_mode
	.export		_show_text
	.export		_has_moved
	.export		_is_moving
	.export		_player_moved_frames
	.export		_frame_count
	.export		_frame_count2
	.export		_local_left
	.export		_local_right
	.export		_local_up
	.export		_local_down
	.export		_pointer2
	.export		_address
	.export		_x
	.export		_y
	.export		_index
	.export		_index2
	.export		_c_map
	.export		_BoxGuy1
	.export		_Level1_0
	.export		_Level2_0
	.export		_Level3_0
	.export		_Level4_0
	.export		_Level_List
	.export		_level_text
	.export		_level_text_length
	.export		_level_player_x
	.export		_level_player_y
	.export		_level_goal_x
	.export		_level_goal_y
	.export		_palette_perrypuzzlesprites_a
	.export		_palette_perrytileset_a
	.export		_metatiles
	.export		_metatile_colision_map
	.export		_draw_bg
	.export		_draw_sprites
	.export		_movement
	.export		_bg_collision
	.export		_sprite_collision
	.export		_level_up
	.export		_init_level
	.export		_set_direction
	.export		_draw_player_sprite
	.export		_init_mode_title
	.export		_title_cutscene
	.export		_init_mode_level_end
	.export		_main
	.export		_title_0

.segment	"DATA"

_index:
	.byte	$00
_BoxGuy1:
	.byte	$40
	.byte	$50
	.byte	$0D
	.byte	$0E
	.byte	$00

.segment	"RODATA"

_perrystandright_data:
	.byte	$07
	.byte	$02
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$41
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$50
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$51
	.byte	$01
	.byte	$80
_perrystandleft_data:
	.byte	$01
	.byte	$02
	.byte	$30
	.byte	$40
	.byte	$00
	.byte	$00
	.byte	$41
	.byte	$41
	.byte	$08
	.byte	$00
	.byte	$40
	.byte	$41
	.byte	$08
	.byte	$08
	.byte	$50
	.byte	$41
	.byte	$00
	.byte	$08
	.byte	$51
	.byte	$41
	.byte	$80
_perrywalkright0_data:
	.byte	$07
	.byte	$02
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$41
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$54
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$55
	.byte	$01
	.byte	$80
_perrywalkright1_data:
	.byte	$07
	.byte	$02
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$41
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$52
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$53
	.byte	$01
	.byte	$80
_perrywalkright2_data:
	.byte	$07
	.byte	$02
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$41
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$56
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$57
	.byte	$01
	.byte	$80
_perrywalkleft0_data:
	.byte	$01
	.byte	$02
	.byte	$30
	.byte	$40
	.byte	$08
	.byte	$00
	.byte	$40
	.byte	$41
	.byte	$00
	.byte	$00
	.byte	$41
	.byte	$41
	.byte	$08
	.byte	$08
	.byte	$54
	.byte	$41
	.byte	$00
	.byte	$08
	.byte	$55
	.byte	$41
	.byte	$80
_perrywalkleft1_data:
	.byte	$01
	.byte	$02
	.byte	$30
	.byte	$40
	.byte	$08
	.byte	$00
	.byte	$40
	.byte	$41
	.byte	$00
	.byte	$00
	.byte	$41
	.byte	$41
	.byte	$08
	.byte	$08
	.byte	$52
	.byte	$41
	.byte	$00
	.byte	$08
	.byte	$53
	.byte	$41
	.byte	$80
_perrywalkleft2_data:
	.byte	$01
	.byte	$02
	.byte	$30
	.byte	$40
	.byte	$08
	.byte	$00
	.byte	$40
	.byte	$41
	.byte	$00
	.byte	$00
	.byte	$41
	.byte	$41
	.byte	$08
	.byte	$08
	.byte	$56
	.byte	$41
	.byte	$00
	.byte	$08
	.byte	$57
	.byte	$41
	.byte	$80
_perrywalkdown0_data:
	.byte	$02
	.byte	$02
	.byte	$31
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$61
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$72
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$73
	.byte	$01
	.byte	$80
_perrywalkdown1_data:
	.byte	$02
	.byte	$02
	.byte	$31
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$61
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$70
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$71
	.byte	$01
	.byte	$80
_perrywalkdown2_data:
	.byte	$02
	.byte	$02
	.byte	$31
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$60
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$61
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$74
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$75
	.byte	$01
	.byte	$80
_perrywalkup0_data:
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$81
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$90
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$93
	.byte	$01
	.byte	$80
_perrywalkup1_data:
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$81
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$90
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$91
	.byte	$01
	.byte	$80
_perrywalkup2_data:
	.byte	$00
	.byte	$00
	.byte	$80
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$81
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$92
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$91
	.byte	$01
	.byte	$80
_nudeman_data:
	.byte	$08
	.byte	$00
	.byte	$0D
	.byte	$01
	.byte	$10
	.byte	$00
	.byte	$0E
	.byte	$01
	.byte	$10
	.byte	$00
	.byte	$0F
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$1D
	.byte	$01
	.byte	$10
	.byte	$08
	.byte	$1E
	.byte	$01
	.byte	$10
	.byte	$08
	.byte	$1F
	.byte	$01
	.byte	$10
	.byte	$10
	.byte	$2E
	.byte	$01
	.byte	$18
	.byte	$10
	.byte	$2F
	.byte	$01
	.byte	$10
	.byte	$18
	.byte	$3E
	.byte	$01
	.byte	$10
	.byte	$18
	.byte	$3F
	.byte	$01
	.byte	$10
	.byte	$20
	.byte	$4E
	.byte	$01
	.byte	$18
	.byte	$20
	.byte	$4F
	.byte	$01
	.byte	$18
	.byte	$18
	.byte	$3F
	.byte	$01
	.byte	$08
	.byte	$10
	.byte	$2D
	.byte	$01
	.byte	$00
	.byte	$10
	.byte	$2C
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$1C
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$01
	.byte	$08
	.byte	$18
	.byte	$3D
	.byte	$01
	.byte	$08
	.byte	$20
	.byte	$4D
	.byte	$01
	.byte	$08
	.byte	$28
	.byte	$5D
	.byte	$01
	.byte	$10
	.byte	$28
	.byte	$5E
	.byte	$01
	.byte	$08
	.byte	$30
	.byte	$6D
	.byte	$01
	.byte	$10
	.byte	$30
	.byte	$6E
	.byte	$01
	.byte	$18
	.byte	$30
	.byte	$6F
	.byte	$01
	.byte	$18
	.byte	$38
	.byte	$7F
	.byte	$01
	.byte	$10
	.byte	$38
	.byte	$7E
	.byte	$01
	.byte	$08
	.byte	$38
	.byte	$7D
	.byte	$01
	.byte	$00
	.byte	$38
	.byte	$7C
	.byte	$01
	.byte	$00
	.byte	$30
	.byte	$6C
	.byte	$01
	.byte	$80
_Duck_data:
	.byte	$08
	.byte	$00
	.byte	$BD
	.byte	$01
	.byte	$10
	.byte	$00
	.byte	$BE
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$CD
	.byte	$01
	.byte	$10
	.byte	$08
	.byte	$CE
	.byte	$01
	.byte	$18
	.byte	$08
	.byte	$CF
	.byte	$01
	.byte	$18
	.byte	$10
	.byte	$DF
	.byte	$01
	.byte	$10
	.byte	$10
	.byte	$DE
	.byte	$01
	.byte	$08
	.byte	$10
	.byte	$DD
	.byte	$01
	.byte	$00
	.byte	$10
	.byte	$DC
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$CC
	.byte	$01
	.byte	$00
	.byte	$18
	.byte	$EC
	.byte	$01
	.byte	$08
	.byte	$18
	.byte	$ED
	.byte	$01
	.byte	$10
	.byte	$18
	.byte	$EE
	.byte	$01
	.byte	$18
	.byte	$18
	.byte	$EF
	.byte	$01
	.byte	$18
	.byte	$20
	.byte	$FF
	.byte	$01
	.byte	$10
	.byte	$20
	.byte	$FE
	.byte	$01
	.byte	$08
	.byte	$20
	.byte	$FD
	.byte	$01
	.byte	$00
	.byte	$20
	.byte	$FC
	.byte	$01
	.byte	$80
_switchleft_data:
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$D0
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$D1
	.byte	$00
	.byte	$80
_switchright_data:
	.byte	$08
	.byte	$00
	.byte	$C0
	.byte	$40
	.byte	$08
	.byte	$08
	.byte	$D0
	.byte	$40
	.byte	$00
	.byte	$08
	.byte	$D1
	.byte	$40
	.byte	$80
_lighton_data:
	.byte	$00
	.byte	$00
	.byte	$A2
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$A3
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$B2
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$B3
	.byte	$00
	.byte	$80
_lightoff_data:
	.byte	$00
	.byte	$00
	.byte	$C2
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$C3
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$D2
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$D3
	.byte	$00
	.byte	$80
_rock_data:
	.byte	$00
	.byte	$00
	.byte	$E0
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$E1
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$F0
	.byte	$02
	.byte	$08
	.byte	$08
	.byte	$F1
	.byte	$02
	.byte	$80
_perryflag0_data:
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$80
_perryflag1_data:
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$00
	.byte	$80
_perryflag2_data:
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$80
_blankflag0_data:
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$80
_blankflag1_data:
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$80
_blankflag2_data:
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$80
_titletailwag0_data:
	.byte	$00
	.byte	$00
	.byte	$15
	.byte	$01
	.byte	$80
_titletailwag1_data:
	.byte	$00
	.byte	$00
	.byte	$17
	.byte	$01
	.byte	$80
_titletailwag2_data:
	.byte	$00
	.byte	$00
	.byte	$16
	.byte	$01
	.byte	$80
_GoalFlag:
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$12
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$13
	.byte	$00
	.byte	$80
_Level1_0:
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$34
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$33
	.byte	$35
	.byte	$04
	.byte	$02
	.byte	$03
	.byte	$04
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$04
	.byte	$0A
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$26
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0A
	.byte	$07
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$0A
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$07
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$0A
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$4B
	.byte	$00
	.byte	$07
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$07
	.byte	$09
	.byte	$09
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$23
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$00
	.byte	$36
	.byte	$39
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$38
_Level2_0:
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$34
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$31
	.byte	$33
	.byte	$35
	.byte	$04
	.byte	$02
	.byte	$03
	.byte	$04
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$04
	.byte	$0A
	.byte	$00
	.byte	$04
	.byte	$3A
	.byte	$26
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$0A
	.byte	$3B
	.byte	$4B
	.byte	$36
	.byte	$35
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$0A
	.byte	$00
	.byte	$06
	.byte	$21
	.byte	$04
	.byte	$22
	.byte	$3C
	.byte	$00
	.byte	$3A
	.byte	$22
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$3A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$3A
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$00
	.byte	$3A
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$07
	.byte	$3C
	.byte	$3A
	.byte	$3C
	.byte	$3A
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$07
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$3A
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$21
	.byte	$3A
	.byte	$04
	.byte	$3A
	.byte	$21
	.byte	$21
	.byte	$22
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3B
	.byte	$07
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$3C
	.byte	$3B
	.byte	$04
	.byte	$3B
	.byte	$07
	.byte	$3A
	.byte	$07
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$3B
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$0A
	.byte	$21
	.byte	$3A
	.byte	$04
	.byte	$3A
	.byte	$00
	.byte	$3B
	.byte	$00
	.byte	$3A
	.byte	$3C
	.byte	$3C
	.byte	$3C
	.byte	$3A
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$3C
	.byte	$3A
	.byte	$00
	.byte	$3C
	.byte	$3C
	.byte	$3B
	.byte	$0A
	.byte	$3A
	.byte	$25
	.byte	$08
	.byte	$22
	.byte	$3C
	.byte	$07
	.byte	$36
	.byte	$35
	.byte	$00
	.byte	$07
	.byte	$3C
	.byte	$09
	.byte	$0A
	.byte	$00
	.byte	$3A
	.byte	$00
	.byte	$3C
	.byte	$00
	.byte	$3A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$36
	.byte	$35
	.byte	$07
	.byte	$00
	.byte	$21
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3B
	.byte	$00
	.byte	$22
	.byte	$08
	.byte	$3B
	.byte	$07
	.byte	$07
	.byte	$00
	.byte	$36
	.byte	$39
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$38
_Level3_0:
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$83
	.byte	$65
	.byte	$1C
	.byte	$00
	.byte	$1E
	.byte	$1F
	.byte	$2B
	.byte	$83
	.byte	$65
	.byte	$1C
	.byte	$0E
	.byte	$1D
	.byte	$0F
	.byte	$0C
	.byte	$0F
	.byte	$83
	.byte	$0E
	.byte	$83
	.byte	$65
	.byte	$1C
	.byte	$0E
	.byte	$0C
	.byte	$1F
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$00
	.byte	$1D
	.byte	$0D
	.byte	$00
	.byte	$00
	.byte	$1C
	.byte	$0E
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0E
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$00
	.byte	$0E
	.byte	$1F
	.byte	$00
	.byte	$2B
	.byte	$2A
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1E
	.byte	$1F
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$2B
	.byte	$4B
	.byte	$2A
	.byte	$00
	.byte	$1B
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$1D
	.byte	$1E
	.byte	$0C
	.byte	$0C
	.byte	$1F
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$21
	.byte	$1D
	.byte	$1C
	.byte	$00
	.byte	$1D
	.byte	$1C
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0E
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0E
	.byte	$65
	.byte	$00
	.byte	$00
	.byte	$0E
	.byte	$1F
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0E
	.byte	$0F
	.byte	$1C
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$00
	.byte	$1D
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$0E
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$00
	.byte	$1D
	.byte	$0C
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0E
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$83
	.byte	$00
	.byte	$1D
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0C
	.byte	$0F
	.byte	$1C
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0D
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$1C
	.byte	$1D
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0E
	.byte	$0D
	.byte	$1F
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$1C
	.byte	$0E
	.byte	$0C
	.byte	$00
	.byte	$2A
	.byte	$1D
	.byte	$0C
	.byte	$1F
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$0E
	.byte	$0C
	.byte	$0F
	.byte	$2B
	.byte	$83
	.byte	$65
	.byte	$1D
	.byte	$0F
	.byte	$1D
	.byte	$65
	.byte	$00
	.byte	$0E
	.byte	$0C
	.byte	$0E
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$1D
	.byte	$00
	.byte	$1C
	.byte	$00
	.byte	$83
	.byte	$65
	.byte	$00
	.byte	$1C
_Level4_0:
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$A0
	.byte	$0A
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$0A
	.byte	$0A
	.byte	$00
	.byte	$3B
	.byte	$3A
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$0A
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$3A
	.byte	$3B
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$01
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$23
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3A
	.byte	$3A
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$3E
	.byte	$3E
	.byte	$3E
	.byte	$3E
	.byte	$25
	.byte	$00
	.byte	$00
	.byte	$3C
	.byte	$3C
	.byte	$00
	.byte	$00
	.byte	$26
	.byte	$3F
	.byte	$3E
	.byte	$3E
	.byte	$3E
	.byte	$00
	.byte	$21
	.byte	$08
	.byte	$22
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$0A
	.byte	$00
	.byte	$2B
	.byte	$1A
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$06
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$01
	.byte	$07
	.byte	$1A
	.byte	$2B
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0A
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$06
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$06
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0A
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3D
	.byte	$3E
	.byte	$3D
	.byte	$3D
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$3A
	.byte	$3A
	.byte	$00
	.byte	$00
	.byte	$26
	.byte	$3F
	.byte	$3E
	.byte	$3D
	.byte	$3E
	.byte	$21
	.byte	$00
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3B
	.byte	$3A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$09
	.byte	$08
	.byte	$3B
	.byte	$3A
	.byte	$07
	.byte	$00
	.byte	$4B
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$3B
	.byte	$3B
	.byte	$00
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$07
_Level_List:
	.addr	_Level1_0
	.addr	_Level2_0
	.addr	_Level3_0
	.addr	_Level4_0
_level_text:
	.addr	L0631
	.addr	L0633
	.addr	L0635
	.addr	L0637
_level_text_length:
	.byte	$0B
	.byte	$0D
	.byte	$0B
	.byte	$10
_level_player_x:
	.byte	$40
	.byte	$3C
	.byte	$78
	.byte	$78
_level_player_y:
	.byte	$3C
	.byte	$3C
	.byte	$78
	.byte	$78
_level_goal_x:
	.byte	$B4
	.byte	$E1
	.byte	$B4
	.byte	$B4
_level_goal_y:
	.byte	$A0
	.byte	$1E
	.byte	$A0
	.byte	$A0
_palette_perrypuzzlesprites_a:
	.byte	$1A
	.byte	$30
	.byte	$0F
	.byte	$15
	.byte	$1A
	.byte	$11
	.byte	$21
	.byte	$20
	.byte	$1A
	.byte	$38
	.byte	$17
	.byte	$07
	.byte	$1A
	.byte	$0F
	.byte	$2D
	.byte	$3D
_palette_perrytileset_a:
	.byte	$1A
	.byte	$30
	.byte	$0F
	.byte	$15
	.byte	$1A
	.byte	$21
	.byte	$11
	.byte	$30
	.byte	$1A
	.byte	$38
	.byte	$17
	.byte	$07
	.byte	$1A
	.byte	$17
	.byte	$2A
	.byte	$0F
_metatiles:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$1E
	.byte	$1E
	.byte	$1F
	.byte	$1E
	.byte	$03
	.byte	$1E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$1E
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$1E
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1E
	.byte	$03
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$1F
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$1F
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1F
	.byte	$03
	.byte	$1E
	.byte	$00
	.byte	$00
	.byte	$1F
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0E
	.byte	$0E
	.byte	$0E
	.byte	$0E
	.byte	$03
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$03
	.byte	$0E
	.byte	$0E
	.byte	$00
	.byte	$0E
	.byte	$03
	.byte	$0E
	.byte	$0E
	.byte	$0E
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$1D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0E
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$03
	.byte	$00
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$03
	.byte	$0E
	.byte	$00
	.byte	$0E
	.byte	$0E
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$8D
	.byte	$9D
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$9C
	.byte	$8D
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$7C
	.byte	$7D
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$7D
	.byte	$7E
	.byte	$03
	.byte	$9D
	.byte	$00
	.byte	$9C
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$8D
	.byte	$00
	.byte	$7E
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$1D
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$A4
	.byte	$A5
	.byte	$B4
	.byte	$B5
	.byte	$02
	.byte	$A6
	.byte	$A7
	.byte	$B6
	.byte	$B7
	.byte	$02
	.byte	$A8
	.byte	$A9
	.byte	$B8
	.byte	$B9
	.byte	$02
	.byte	$C8
	.byte	$C9
	.byte	$D8
	.byte	$D9
	.byte	$02
	.byte	$C4
	.byte	$C5
	.byte	$D4
	.byte	$D5
	.byte	$02
	.byte	$C6
	.byte	$C7
	.byte	$D6
	.byte	$D7
	.byte	$02
	.byte	$E4
	.byte	$E5
	.byte	$F4
	.byte	$F5
	.byte	$02
	.byte	$E6
	.byte	$E7
	.byte	$F6
	.byte	$F7
	.byte	$02
	.byte	$E8
	.byte	$E9
	.byte	$F8
	.byte	$F9
	.byte	$02
	.byte	$8E
	.byte	$8F
	.byte	$9E
	.byte	$9F
	.byte	$03
	.byte	$9E
	.byte	$9F
	.byte	$8E
	.byte	$8F
	.byte	$03
	.byte	$AC
	.byte	$AD
	.byte	$BC
	.byte	$BD
	.byte	$03
	.byte	$84
	.byte	$85
	.byte	$94
	.byte	$95
	.byte	$02
	.byte	$86
	.byte	$87
	.byte	$96
	.byte	$97
	.byte	$02
	.byte	$88
	.byte	$89
	.byte	$98
	.byte	$99
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E2
	.byte	$E3
	.byte	$F2
	.byte	$F3
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$12
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$12
	.byte	$11
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$12
	.byte	$12
	.byte	$02
	.byte	$AE
	.byte	$AF
	.byte	$BE
	.byte	$BF
	.byte	$00
	.byte	$C2
	.byte	$C3
	.byte	$D2
	.byte	$D3
	.byte	$03
	.byte	$C0
	.byte	$C1
	.byte	$D0
	.byte	$D1
	.byte	$02
	.byte	$8A
	.byte	$8B
	.byte	$9A
	.byte	$9B
	.byte	$02
	.byte	$8C
	.byte	$00
	.byte	$8C
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$AB
	.byte	$00
	.byte	$AB
	.byte	$02
	.byte	$CC
	.byte	$CD
	.byte	$DC
	.byte	$EE
	.byte	$02
	.byte	$CE
	.byte	$CE
	.byte	$EE
	.byte	$EE
	.byte	$02
	.byte	$CF
	.byte	$CD
	.byte	$EE
	.byte	$DD
	.byte	$02
	.byte	$CC
	.byte	$CE
	.byte	$DC
	.byte	$02
	.byte	$01
	.byte	$CF
	.byte	$CE
	.byte	$DE
	.byte	$DF
	.byte	$01
	.byte	$CF
	.byte	$CD
	.byte	$DE
	.byte	$FF
	.byte	$01
	.byte	$DC
	.byte	$DD
	.byte	$FE
	.byte	$FF
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$DC
	.byte	$EE
	.byte	$EC
	.byte	$EE
	.byte	$02
	.byte	$EE
	.byte	$EE
	.byte	$EE
	.byte	$EE
	.byte	$02
	.byte	$EE
	.byte	$ED
	.byte	$EE
	.byte	$DD
	.byte	$02
	.byte	$EC
	.byte	$DD
	.byte	$FE
	.byte	$ED
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$DC
	.byte	$ED
	.byte	$DC
	.byte	$DD
	.byte	$01
	.byte	$FE
	.byte	$ED
	.byte	$EC
	.byte	$DD
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$DC
	.byte	$EE
	.byte	$FC
	.byte	$DE
	.byte	$02
	.byte	$EE
	.byte	$EE
	.byte	$DF
	.byte	$DE
	.byte	$02
	.byte	$EE
	.byte	$DD
	.byte	$DF
	.byte	$FD
	.byte	$02
	.byte	$EC
	.byte	$DD
	.byte	$FC
	.byte	$DE
	.byte	$01
	.byte	$EF
	.byte	$CF
	.byte	$DF
	.byte	$DE
	.byte	$01
	.byte	$EF
	.byte	$ED
	.byte	$DE
	.byte	$FD
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$12
	.byte	$12
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$12
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$11
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$04
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$07
	.byte	$00
	.byte	$14
	.byte	$05
	.byte	$14
	.byte	$16
	.byte	$01
	.byte	$14
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$12
	.byte	$05
	.byte	$01
	.byte	$18
	.byte	$15
	.byte	$06
	.byte	$05
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$17
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$17
	.byte	$01
	.byte	$00
	.byte	$2D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$50
	.byte	$52
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$45
	.byte	$53
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$53
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$53
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$54
	.byte	$41
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$52
	.byte	$54
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$2D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$13
	.byte	$01
	.byte	$FA
	.byte	$00
	.byte	$12
	.byte	$1A
	.byte	$01
	.byte	$14
	.byte	$00
	.byte	$15
	.byte	$00
	.byte	$01
	.byte	$13
	.byte	$12
	.byte	$14
	.byte	$00
	.byte	$01
	.byte	$11
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$13
	.byte	$00
	.byte	$14
	.byte	$01
	.byte	$12
	.byte	$18
	.byte	$00
	.byte	$06
	.byte	$01
	.byte	$15
	.byte	$00
	.byte	$05
	.byte	$00
	.byte	$01
	.byte	$06
	.byte	$12
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$50
	.byte	$55
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$5A
	.byte	$5A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$4C
	.byte	$45
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$51
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$55
	.byte	$45
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$53
	.byte	$54
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$27
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$16
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$06
	.byte	$12
	.byte	$01
	.byte	$14
	.byte	$00
	.byte	$16
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$14
	.byte	$01
	.byte	$14
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$01
	.byte	$0A
	.byte	$00
	.byte	$06
	.byte	$12
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$12
	.byte	$15
	.byte	$01
	.byte	$12
	.byte	$19
	.byte	$00
	.byte	$14
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$46
	.byte	$65
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$52
	.byte	$61
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$4C
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$41
	.byte	$6C
	.byte	$42
	.byte	$72
	.byte	$00
	.byte	$61
	.byte	$6E
	.byte	$69
	.byte	$61
	.byte	$00
	.byte	$00
	.byte	$26
	.byte	$6E
	.byte	$00
	.byte	$00
_metatile_colision_map:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_title_0:
	.byte	$32
	.byte	$31
	.byte	$31
	.byte	$32
	.byte	$31
	.byte	$31
	.byte	$32
	.byte	$31
	.byte	$32
	.byte	$31
	.byte	$32
	.byte	$32
	.byte	$31
	.byte	$32
	.byte	$31
	.byte	$32
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$E9
	.byte	$EA
	.byte	$EB
	.byte	$00
	.byte	$07
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$B0
	.byte	$B1
	.byte	$B2
	.byte	$B3
	.byte	$B4
	.byte	$B3
	.byte	$C4
	.byte	$B0
	.byte	$B1
	.byte	$B2
	.byte	$C6
	.byte	$C7
	.byte	$DF
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$C0
	.byte	$C1
	.byte	$C2
	.byte	$C3
	.byte	$0A
	.byte	$C3
	.byte	$E4
	.byte	$E4
	.byte	$07
	.byte	$E5
	.byte	$E5
	.byte	$E4
	.byte	$CC
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$D0
	.byte	$D1
	.byte	$D2
	.byte	$D3
	.byte	$D4
	.byte	$D3
	.byte	$C5
	.byte	$D5
	.byte	$D6
	.byte	$D7
	.byte	$D8
	.byte	$E8
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$E0
	.byte	$E1
	.byte	$07
	.byte	$E2
	.byte	$B4
	.byte	$E3
	.byte	$E0
	.byte	$E0
	.byte	$00
	.byte	$E3
	.byte	$E6
	.byte	$E7
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$D9
	.byte	$DA
	.byte	$DB
	.byte	$DC
	.byte	$DD
	.byte	$DE
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$C8
	.byte	$C9
	.byte	$CA
	.byte	$CB
	.byte	$CC
	.byte	$CD
	.byte	$CE
	.byte	$CF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$07
	.byte	$24
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$24
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
	.byte	$37
L0E75:
	.byte	$42,$72,$69,$61,$6E,$20,$41,$6E,$64,$20,$41,$6C,$61,$6E,$20,$47
	.byte	$61,$6D,$65,$73,$00
L0637:
	.byte	$54,$77,$6F,$20,$50,$6C,$61,$79,$65,$72,$20,$47,$61,$6D,$65,$00
L0633:
	.byte	$4E,$6F,$74,$20,$73,$6F,$20,$73,$69,$6D,$70,$6C,$65,$00
L0635:
	.byte	$39,$30,$20,$44,$65,$67,$72,$65,$65,$73,$00
L0631:
	.byte	$45,$61,$73,$79,$20,$50,$65,$61,$73,$79,$00
L0ECF:
	.byte	$4C,$65,$76,$65,$6C,$00

.segment	"BSS"

.segment	"ZEROPAGE"
_pad1:
	.res	1,$00
_pad1_new:
	.res	1,$00
_pad2:
	.res	1,$00
_pad2_new:
	.res	1,$00
_collision:
	.res	1,$00
_collision_L:
	.res	1,$00
_collision_R:
	.res	1,$00
_collision_U:
	.res	1,$00
_collision_D:
	.res	1,$00
_collision2:
	.res	1,$00
_level:
	.res	1,$00
_p_maps:
	.res	2,$00
_coordinates:
	.res	1,$00
_temp1:
	.res	1,$00
_temp2:
	.res	1,$00
_temp3:
	.res	1,$00
_temp4:
	.res	1,$00
_temp_x:
	.res	1,$00
_temp_y:
	.res	1,$00
_game_mode:
	.res	1,$00
_show_text:
	.res	1,$00
_has_moved:
	.res	1,$00
_is_moving:
	.res	1,$00
_player_moved_frames:
	.res	1,$00
_frame_count:
	.res	1,$00
_frame_count2:
	.res	1,$00
_local_left:
	.res	1,$00
_local_right:
	.res	1,$00
_local_up:
	.res	1,$00
_local_down:
	.res	1,$00
_pointer2:
	.res	2,$00
_address:
	.res	2,$00
_x:
	.res	1,$00
_y:
	.res	1,$00
_index2:
	.res	1,$00
.segment	"BSS"
_c_map:
	.res	240,$00

; ---------------------------------------------------------------
; void __near__ draw_bg (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_bg: near

.segment	"CODE"

;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; p_maps = Level_List[level];
;
	ldx     #$00
	lda     _level
	asl     a
	bcc     L0F8E
	inx
	clc
L0F8E:	adc     #<(_Level_List)
	sta     ptr1
	txa
	adc     #>(_Level_List)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _p_maps+1
	dey
	lda     (ptr1),y
	sta     _p_maps
;
; memcpy(c_map, p_maps, 240);
;
	lda     #<(_c_map)
	ldx     #>(_c_map)
	jsr     pushax
	lda     _p_maps
	ldx     _p_maps+1
	jsr     pushax
	ldx     #$00
	lda     #$F0
	jsr     _memcpy
;
; clear_vram_buffer();
;
	jsr     _clear_vram_buffer
;
; set_data_pointer(Level_List[level]);
;
	ldx     #$00
	lda     _level
	asl     a
	bcc     L0F8F
	inx
	clc
L0F8F:	adc     #<(_Level_List)
	sta     ptr1
	txa
	adc     #>(_Level_List)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     _set_data_pointer
;
; set_mt_pointer(metatiles);
;
	lda     #<(_metatiles)
	ldx     #>(_metatiles)
	jsr     _set_mt_pointer
;
; for (y = 0;; y += 0x20)
;
	lda     #$00
L0F8D:	sta     _y
;
; for (x = 0;; x += 0x20)
;
	lda     #$00
L0F8C:	sta     _x
;
; address = get_ppu_addr(0, x, y);
;
	jsr     decsp2
	lda     #$00
	ldy     #$01
	sta     (sp),y
	lda     _x
	dey
	sta     (sp),y
	lda     _y
	jsr     _get_ppu_addr
	sta     _address
	stx     _address+1
;
; index = (y & 0xf0) + (x >> 4);
;
	lda     _y
	and     #$F0
	sta     ptr1
	lda     _x
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     _index
;
; buffer_4_mt(address, index); // ppu_address, index to the data
;
	lda     _address
	ldx     _address+1
	jsr     pushax
	lda     _index
	jsr     _buffer_4_mt
;
; flush_vram_update2();
;
	jsr     _flush_vram_update2
;
; if (x == 0xe0)
;
	lda     _x
	cmp     #$E0
;
; break;
;
	beq     L0F90
;
; for (x = 0;; x += 0x20)
;
	lda     #$20
	clc
	adc     _x
	jmp     L0F8C
;
; if (y == 0xe0)
;
L0F90:	lda     _y
	cmp     #$E0
;
; break;
;
	beq     L0C85
;
; for (y = 0;; y += 0x20)
;
	lda     #$20
	clc
	adc     _y
	jmp     L0F8D
;
; ppu_on_all(); // turn on screen
;
L0C85:	jmp     _ppu_on_all

.endproc

; ---------------------------------------------------------------
; void __near__ draw_sprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_sprites: near

.segment	"CODE"

;
; oam_clear();
;
	jsr     _oam_clear
;
; draw_player_sprite();
;
	jmp     _draw_player_sprite

.endproc

; ---------------------------------------------------------------
; void __near__ movement (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_movement: near

.segment	"CODE"

;
; is_moving = 0;
;
	lda     #$00
	sta     _is_moving
;
; has_moved = 0;
;
	sta     _has_moved
;
; if (pad1 & local_left)
;
	lda     _local_left
	and     _pad1
	pha
	pla
	beq     L0F93
;
; is_moving = 1;
;
	lda     #$01
	sta     _is_moving
;
; BoxGuy1.direction = LEFT;
;
	lda     #$00
	sta     _BoxGuy1+4
;
; BoxGuy1.X -= 1;
;
	dec     _BoxGuy1
;
; has_moved = 1;
;
	lda     #$01
;
; else if (pad1 & local_right)
;
	jmp     L0F91
L0F93:	lda     _local_right
	and     _pad1
	pha
	pla
	beq     L0CB9
;
; is_moving = 1;
;
	lda     #$01
	sta     _is_moving
;
; BoxGuy1.direction = RIGHT;
;
	sta     _BoxGuy1+4
;
; BoxGuy1.X += 1;
;
	inc     _BoxGuy1
;
; has_moved = 1;
;
L0F91:	sta     _has_moved
;
; bg_collision();
;
L0CB9:	jsr     _bg_collision
;
; if (collision_R)
;
	lda     _collision_R
	beq     L0CC4
;
; BoxGuy1.X -= 1;
;
	dec     _BoxGuy1
;
; if (collision_L)
;
L0CC4:	lda     _collision_L
	beq     L0CC8
;
; BoxGuy1.X += 1;
;
	inc     _BoxGuy1
;
; if (pad1 & local_up && has_moved == 0)
;
L0CC8:	lda     _local_up
	and     _pad1
	pha
	pla
	beq     L0F97
	lda     _has_moved
	bne     L0F97
;
; BoxGuy1.direction = UP;
;
	lda     #$02
	sta     _BoxGuy1+4
;
; BoxGuy1.Y -= 1;
;
	dec     _BoxGuy1+1
;
; else if (pad1 & local_down && has_moved == 0)
;
	jmp     L0F9C
L0F97:	lda     _local_down
	and     _pad1
	pha
	pla
	beq     L0CD9
	lda     _has_moved
	bne     L0CD9
;
; BoxGuy1.direction = DOWN;
;
	lda     #$03
	sta     _BoxGuy1+4
;
; BoxGuy1.Y += 1;
;
	inc     _BoxGuy1+1
;
; has_moved = 1;
;
L0F9C:	lda     #$01
	sta     _has_moved
;
; is_moving = 1;
;
	sta     _is_moving
;
; bg_collision();
;
L0CD9:	jsr     _bg_collision
;
; if (collision_D)
;
	lda     _collision_D
	beq     L0CE6
;
; BoxGuy1.Y -= 1;
;
	dec     _BoxGuy1+1
;
; if (collision_U)
;
L0CE6:	lda     _collision_U
	beq     L0CEA
;
; BoxGuy1.Y += 1;
;
	inc     _BoxGuy1+1
;
; }
;
L0CEA:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ bg_collision (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_bg_collision: near

.segment	"CODE"

;
; collision_L = 0;
;
	lda     #$00
	sta     _collision_L
;
; collision_R = 0;
;
	sta     _collision_R
;
; collision_U = 0;
;
	sta     _collision_U
;
; collision_D = 0;
;
	sta     _collision_D
;
; temp_x = BoxGuy1.X; // left side
;
	lda     _BoxGuy1
	sta     _temp_x
;
; temp_y = BoxGuy1.Y; // top side
;
	lda     _BoxGuy1+1
	sta     _temp_y
;
; if (temp_y >= 0xf0)
;
	cmp     #$F0
;
; return;
;
	bcc     L0FA6
;
; }
;
	rts
;
; coordinates = (temp_x >> 4) + (temp_y & 0xf0); // upper left
;
L0FA6:	lda     _temp_x
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     ptr1
	lda     _temp_y
	and     #$F0
	clc
	adc     ptr1
	sta     _coordinates
;
; collision2 = c_map[coordinates];
;
	ldy     _coordinates
	lda     _c_map,y
	sta     _collision2
;
; if (metatile_colision_map[collision2])
;
	ldy     _collision2
	lda     _metatile_colision_map,y
	beq     L0F9F
;
; ++collision_L;
;
	inc     _collision_L
;
; ++collision_U;
;
	inc     _collision_U
;
; if (metatile_colision_map[collision2] == GOAL_FLAG)
;
	ldy     _collision2
	lda     _metatile_colision_map,y
	cmp     #$02
	bne     L0F9F
;
; init_mode_level_end();
;
	jsr     _init_mode_level_end
;
; temp_x = BoxGuy1.X + BoxGuy1.width; // right side
;
L0F9F:	lda     _BoxGuy1
	clc
	adc     _BoxGuy1+2
	sta     _temp_x
;
; coordinates = (temp_x >> 4) + (temp_y & 0xf0); // upper right
;
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     ptr1
	lda     _temp_y
	and     #$F0
	clc
	adc     ptr1
	sta     _coordinates
;
; collision2 = c_map[coordinates];
;
	ldy     _coordinates
	lda     _c_map,y
	sta     _collision2
;
; if (metatile_colision_map[collision2])
;
	ldy     _collision2
	lda     _metatile_colision_map,y
	beq     L0FA0
;
; ++collision_R;
;
	inc     _collision_R
;
; ++collision_U;
;
	inc     _collision_U
;
; if (metatile_colision_map[collision2] == GOAL_FLAG)
;
	ldy     _collision2
	lda     _metatile_colision_map,y
	cmp     #$02
	bne     L0FA0
;
; init_mode_level_end();
;
	jsr     _init_mode_level_end
;
; temp_y = BoxGuy1.Y + BoxGuy1.height; // bottom side
;
L0FA0:	lda     _BoxGuy1+1
	clc
	adc     _BoxGuy1+3
	sta     _temp_y
;
; if (temp_y >= 0xf0)
;
	cmp     #$F0
;
; return;
;
	bcs     L0D4D
;
; coordinates = (temp_x >> 4) + (temp_y & 0xf0); // bottom right
;
	lda     _temp_x
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     ptr1
	lda     _temp_y
	and     #$F0
	clc
	adc     ptr1
	sta     _coordinates
;
; collision2 = c_map[coordinates];
;
	ldy     _coordinates
	lda     _c_map,y
	sta     _collision2
;
; if (metatile_colision_map[collision2])
;
	ldy     _collision2
	lda     _metatile_colision_map,y
	beq     L0FA1
;
; ++collision_R;
;
	inc     _collision_R
;
; ++collision_D;
;
	inc     _collision_D
;
; if (metatile_colision_map[collision2] == GOAL_FLAG)
;
	ldy     _collision2
	lda     _metatile_colision_map,y
	cmp     #$02
	bne     L0FA1
;
; init_mode_level_end();
;
	jsr     _init_mode_level_end
;
; temp_x = BoxGuy1.X; // left side
;
L0FA1:	lda     _BoxGuy1
	sta     _temp_x
;
; coordinates = (temp_x >> 4) + (temp_y & 0xf0); // bottom left
;
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     ptr1
	lda     _temp_y
	and     #$F0
	clc
	adc     ptr1
	sta     _coordinates
;
; collision2 = c_map[coordinates];
;
	ldy     _coordinates
	lda     _c_map,y
	sta     _collision2
;
; if (metatile_colision_map[collision2])
;
	ldy     _collision2
	lda     _metatile_colision_map,y
	beq     L0D4D
;
; ++collision_L;
;
	inc     _collision_L
;
; ++collision_D;
;
	inc     _collision_D
;
; if (metatile_colision_map[collision2] == GOAL_FLAG)
;
	ldy     _collision2
	lda     _metatile_colision_map,y
	cmp     #$02
;
; init_mode_level_end();
;
	jeq     _init_mode_level_end
;
; }
;
L0D4D:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ sprite_collision (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_sprite_collision: near

.segment	"CODE"

;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ level_up (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_level_up: near

.segment	"CODE"

;
; ++level;
;
	inc     _level
;
; if (level >= 4)
;
	lda     _level
	cmp     #$04
	bcc     L0D57
;
; level = 0;
;
	lda     #$00
	sta     _level
;
; init_level();
;
L0D57:	jmp     _init_level

.endproc

; ---------------------------------------------------------------
; void __near__ init_level (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_level: near

.segment	"CODE"

;
; BoxGuy1.X = level_player_x[level];
;
	ldy     _level
	lda     _level_player_x,y
	sta     _BoxGuy1
;
; BoxGuy1.Y = level_player_y[level];
;
	ldy     _level
	lda     _level_player_y,y
	sta     _BoxGuy1+1
;
; oam_clear();
;
	jsr     _oam_clear
;
; ppu_off();
;
	jsr     _ppu_off
;
; game_mode = MODE_GAME;
;
	lda     #$01
	sta     _game_mode
;
; draw_bg();
;
	jsr     _draw_bg
;
; multi_vram_buffer_horz("Level", 5, NTADR_A(3, 1));
;
	jsr     decsp3
	lda     #<(L0ECF)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L0ECF)
	sta     (sp),y
	lda     #$05
	ldy     #$00
	sta     (sp),y
	ldx     #$20
	lda     #$23
	jsr     _multi_vram_buffer_horz
;
; one_vram_buffer(49 + level, NTADR_A(9, 1));
;
	lda     _level
	clc
	adc     #$31
	jsr     pusha
	ldx     #$20
	lda     #$29
	jsr     _one_vram_buffer
;
; multi_vram_buffer_horz(level_text[level], level_text_length[level], NTADR_A(3, 2));
;
	jsr     decsp3
	ldx     #$00
	lda     _level
	asl     a
	bcc     L0FA8
	inx
	clc
L0FA8:	adc     #<(_level_text)
	sta     ptr1
	txa
	adc     #>(_level_text)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	iny
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     _level
	lda     _level_text_length,y
	ldy     #$00
	sta     (sp),y
	ldx     #$20
	lda     #$43
	jsr     _multi_vram_buffer_horz
;
; set_direction();
;
	jsr     _set_direction
;
; ppu_on_all();
;
	jsr     _ppu_on_all
;
; pal_fade_to(0, 4);
;
	lda     #$00
	jsr     pusha
	lda     #$04
	jmp     _pal_fade_to

.endproc

; ---------------------------------------------------------------
; void __near__ set_direction (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_direction: near

.segment	"CODE"

;
; local_up = PAD_UP;
;
	lda     #$08
	sta     _local_up
;
; local_down = PAD_DOWN;
;
	lda     #$04
	sta     _local_down
;
; local_left = PAD_LEFT;
;
	lda     #$02
	sta     _local_left
;
; local_right = PAD_RIGHT;
;
	lda     #$01
	sta     _local_right
;
; if (level == 2)
;
	lda     _level
	cmp     #$02
	bne     L0EFB
;
; local_up = PAD_LEFT;
;
	sta     _local_up
;
; local_down = PAD_RIGHT;
;
	lda     #$01
	sta     _local_down
;
; local_left = PAD_DOWN;
;
	lda     #$04
	sta     _local_left
;
; local_right = PAD_UP;
;
	lda     #$08
	sta     _local_right
;
; }
;
L0EFB:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ draw_player_sprite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_player_sprite: near

.segment	"CODE"

;
; ++player_moved_frames;
;
	inc     _player_moved_frames
;
; if (player_moved_frames > 32)
;
	lda     _player_moved_frames
	cmp     #$21
	bcc     L0FAE
;
; player_moved_frames = 0;
;
	lda     #$00
	sta     _player_moved_frames
;
; switch (BoxGuy1.direction)
;
L0FAE:	lda     _BoxGuy1+4
;
; }
;
	beq     L0F0F
	cmp     #$01
	beq     L0F2C
	cmp     #$02
	jeq     L0F49
	cmp     #$03
	jeq     L0F66
	jmp     L0F82
;
; if (is_moving)
;
L0F0F:	lda     _is_moving
	beq     L0F10
;
; if (player_moved_frames < 8)
;
	lda     _player_moved_frames
	cmp     #$08
	bcs     L0FAF
;
; pointer2 = perrywalkleft0_data;
;
	lda     #>(_perrywalkleft0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkleft0_data)
;
; else if (player_moved_frames < 16)
;
	jmp     L0FAA
L0FAF:	lda     _player_moved_frames
	cmp     #$10
	bcs     L0FB0
;
; pointer2 = perrywalkleft1_data;
;
	lda     #>(_perrywalkleft1_data)
	sta     _pointer2+1
	lda     #<(_perrywalkleft1_data)
;
; else if (player_moved_frames < 24)
;
	jmp     L0FAA
L0FB0:	lda     _player_moved_frames
	cmp     #$18
	bcs     L0FB1
;
; pointer2 = perrywalkleft2_data;
;
	lda     #>(_perrywalkleft2_data)
	sta     _pointer2+1
	lda     #<(_perrywalkleft2_data)
;
; else if (player_moved_frames < 32)
;
	jmp     L0FAA
L0FB1:	lda     _player_moved_frames
	cmp     #$20
	bcs     L0F21
;
; pointer2 = perrywalkleft1_data;
;
	lda     #>(_perrywalkleft1_data)
	sta     _pointer2+1
	lda     #<(_perrywalkleft1_data)
;
; else
;
	jmp     L0FAA
;
; pointer2 = perrywalkleft0_data;
;
L0F21:	lda     #>(_perrywalkleft0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkleft0_data)
;
; else
;
	jmp     L0FAA
;
; pointer2 = perrystandleft_data;
;
L0F10:	lda     #>(_perrystandleft_data)
	sta     _pointer2+1
	lda     #<(_perrystandleft_data)
;
; break;
;
	jmp     L0FAA
;
; if (is_moving)
;
L0F2C:	lda     _is_moving
	jeq     L0F82
;
; if (player_moved_frames < 8)
;
	lda     _player_moved_frames
	cmp     #$08
	bcs     L0FB2
;
; pointer2 = perrywalkright0_data;
;
	lda     #>(_perrywalkright0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkright0_data)
;
; else if (player_moved_frames < 16)
;
	jmp     L0FAA
L0FB2:	lda     _player_moved_frames
	cmp     #$10
	bcs     L0FB3
;
; pointer2 = perrywalkright1_data;
;
	lda     #>(_perrywalkright1_data)
	sta     _pointer2+1
	lda     #<(_perrywalkright1_data)
;
; else if (player_moved_frames < 24)
;
	jmp     L0FAA
L0FB3:	lda     _player_moved_frames
	cmp     #$18
	bcs     L0FB4
;
; pointer2 = perrywalkright2_data;
;
	lda     #>(_perrywalkright2_data)
	sta     _pointer2+1
	lda     #<(_perrywalkright2_data)
;
; else if (player_moved_frames < 32)
;
	jmp     L0FAA
L0FB4:	lda     _player_moved_frames
	cmp     #$20
	bcs     L0F3E
;
; pointer2 = perrywalkright1_data;
;
	lda     #>(_perrywalkright1_data)
	sta     _pointer2+1
	lda     #<(_perrywalkright1_data)
;
; else
;
	jmp     L0FAA
;
; pointer2 = perrywalkright0_data;
;
L0F3E:	lda     #>(_perrywalkright0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkright0_data)
;
; else
;
	jmp     L0FAA
;
; if (is_moving)
;
L0F49:	lda     _is_moving
	beq     L0F4A
;
; if (player_moved_frames < 8)
;
	lda     _player_moved_frames
	cmp     #$08
	bcs     L0FB5
;
; pointer2 = perrywalkup0_data;
;
	lda     #>(_perrywalkup0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkup0_data)
;
; else if (player_moved_frames < 16)
;
	jmp     L0FAA
L0FB5:	lda     _player_moved_frames
	cmp     #$10
	bcs     L0FB6
;
; pointer2 = perrywalkup1_data;
;
	lda     #>(_perrywalkup1_data)
	sta     _pointer2+1
	lda     #<(_perrywalkup1_data)
;
; else if (player_moved_frames < 24)
;
	jmp     L0FAA
L0FB6:	lda     _player_moved_frames
	cmp     #$18
	bcs     L0FB7
;
; pointer2 = perrywalkup2_data;
;
	lda     #>(_perrywalkup2_data)
	sta     _pointer2+1
	lda     #<(_perrywalkup2_data)
;
; else if (player_moved_frames < 32)
;
	jmp     L0FAA
L0FB7:	lda     _player_moved_frames
	cmp     #$20
	bcs     L0F5B
;
; pointer2 = perrywalkup1_data;
;
	lda     #>(_perrywalkup1_data)
	sta     _pointer2+1
	lda     #<(_perrywalkup1_data)
;
; else
;
	jmp     L0FAA
;
; pointer2 = perrywalkup0_data;
;
L0F5B:	lda     #>(_perrywalkup0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkup0_data)
;
; else
;
	jmp     L0FAA
;
; pointer2 = perrywalkup0_data;
;
L0F4A:	lda     #>(_perrywalkup0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkup0_data)
;
; break;
;
	jmp     L0FAA
;
; if (is_moving)
;
L0F66:	lda     _is_moving
	beq     L0F67
;
; if (player_moved_frames < 8)
;
	lda     _player_moved_frames
	cmp     #$08
	bcs     L0FB8
;
; pointer2 = perrywalkdown0_data;
;
	lda     #>(_perrywalkdown0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkdown0_data)
;
; else if (player_moved_frames < 16)
;
	jmp     L0FAA
L0FB8:	lda     _player_moved_frames
	cmp     #$10
	bcs     L0FB9
;
; pointer2 = perrywalkdown1_data;
;
	lda     #>(_perrywalkdown1_data)
	sta     _pointer2+1
	lda     #<(_perrywalkdown1_data)
;
; else if (player_moved_frames < 24)
;
	jmp     L0FAA
L0FB9:	lda     _player_moved_frames
	cmp     #$18
	bcs     L0FBA
;
; pointer2 = perrywalkdown2_data;
;
	lda     #>(_perrywalkdown2_data)
	sta     _pointer2+1
	lda     #<(_perrywalkdown2_data)
;
; else if (player_moved_frames < 32)
;
	jmp     L0FAA
L0FBA:	lda     _player_moved_frames
	cmp     #$20
	bcs     L0F78
;
; pointer2 = perrywalkdown1_data;
;
	lda     #>(_perrywalkdown1_data)
	sta     _pointer2+1
	lda     #<(_perrywalkdown1_data)
;
; else
;
	jmp     L0FAA
;
; pointer2 = perrywalkdown0_data;
;
L0F78:	lda     #>(_perrywalkdown0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkdown0_data)
;
; else
;
	jmp     L0FAA
;
; pointer2 = perrywalkdown0_data;
;
L0F67:	lda     #>(_perrywalkdown0_data)
	sta     _pointer2+1
	lda     #<(_perrywalkdown0_data)
;
; break;
;
	jmp     L0FAA
;
; pointer2 = perrystandright_data;
;
L0F82:	lda     #>(_perrystandright_data)
	sta     _pointer2+1
	lda     #<(_perrystandright_data)
L0FAA:	sta     _pointer2
;
; oam_meta_spr(BoxGuy1.X, BoxGuy1.Y, pointer2);
;
	jsr     decsp2
	lda     _BoxGuy1
	ldy     #$01
	sta     (sp),y
	lda     _BoxGuy1+1
	dey
	sta     (sp),y
	lda     _pointer2
	ldx     _pointer2+1
	jmp     _oam_meta_spr

.endproc

; ---------------------------------------------------------------
; void __near__ init_mode_title (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_mode_title: near

.segment	"CODE"

;
; ppu_off();
;
	jsr     _ppu_off
;
; clear_vram_buffer();
;
	jsr     _clear_vram_buffer
;
; set_data_pointer(title_0);
;
	lda     #<(_title_0)
	ldx     #>(_title_0)
	jsr     _set_data_pointer
;
; set_mt_pointer(metatiles);
;
	lda     #<(_metatiles)
	ldx     #>(_metatiles)
	jsr     _set_mt_pointer
;
; for (y = 0;; y += 0x20)
;
	lda     #$00
L0FBF:	sta     _y
;
; for (x = 0;; x += 0x20)
;
	lda     #$00
L0FBE:	sta     _x
;
; address = get_ppu_addr(0, x, y);
;
	jsr     decsp2
	lda     #$00
	ldy     #$01
	sta     (sp),y
	lda     _x
	dey
	sta     (sp),y
	lda     _y
	jsr     _get_ppu_addr
	sta     _address
	stx     _address+1
;
; index = (y & 0xf0) + (x >> 4);
;
	lda     _y
	and     #$F0
	sta     ptr1
	lda     _x
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     _index
;
; buffer_4_mt(address, index); // ppu_address, index to the data
;
	lda     _address
	ldx     _address+1
	jsr     pushax
	lda     _index
	jsr     _buffer_4_mt
;
; flush_vram_update2();
;
	jsr     _flush_vram_update2
;
; if (x == 0xe0)
;
	lda     _x
	cmp     #$E0
;
; break;
;
	beq     L0FC0
;
; for (x = 0;; x += 0x20)
;
	lda     #$20
	clc
	adc     _x
	jmp     L0FBE
;
; if (y == 0xe0)
;
L0FC0:	lda     _y
	cmp     #$E0
;
; break;
;
	beq     L0E54
;
; for (y = 0;; y += 0x20)
;
	lda     #$20
	clc
	adc     _y
	jmp     L0FBF
;
; multi_vram_buffer_horz("Brian And Alan Games", 20, NTADR_A(6, 24));
;
L0E54:	jsr     decsp3
	lda     #<(L0E75)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L0E75)
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	ldx     #$23
	lda     #$06
	jsr     _multi_vram_buffer_horz
;
; ppu_on_all();
;
	jsr     _ppu_on_all
;
; game_mode = MODE_TITLE;
;
	lda     #$00
	sta     _game_mode
;
; frame_count = 0;
;
	sta     _frame_count
;
; frame_count2 = 0;
;
	sta     _frame_count2
;
; BoxGuy1.X = 0;
;
	sta     _BoxGuy1
;
; BoxGuy1.Y = 138;
;
	lda     #$8A
	sta     _BoxGuy1+1
;
; BoxGuy1.direction = RIGHT;
;
	lda     #$01
	sta     _BoxGuy1+4
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ title_cutscene (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_title_cutscene: near

.segment	"CODE"

;
; if (frame_count > 254 && frame_count2 > 1 || BoxGuy1.X > 248)
;
	lda     _frame_count
	cmp     #$FF
	bcc     L0FC1
	lda     _frame_count2
	cmp     #$02
	bcs     L0FC2
L0FC1:	lda     _BoxGuy1
	cmp     #$F9
	bcc     L0FC3
;
; return;
;
L0FC2:	rts
;
; ++frame_count;
;
L0FC3:	inc     _frame_count
;
; if (frame_count > 200)
;
	lda     _frame_count
	cmp     #$C9
	bcc     L0FC4
;
; ++frame_count2;
;
	inc     _frame_count2
;
; frame_count = 0;
;
	lda     #$00
	sta     _frame_count
;
; if (frame_count2 < 1)
;
L0FC4:	lda     _frame_count2
;
; return;
;
	beq     L0E8B
;
; if (frame_count < 60)
;
	lda     _frame_count
	cmp     #$3C
	bcs     L0FC5
;
; is_moving = 1;
;
	lda     #$01
	sta     _is_moving
;
; BoxGuy1.X += 1;
;
	inc     _BoxGuy1
;
; else if (frame_count < 80)
;
	jmp     L0EB8
L0FC5:	lda     _frame_count
	cmp     #$50
	bcs     L0FC6
;
; BoxGuy1.direction = LEFT;
;
	lda     #$00
	sta     _BoxGuy1+4
;
; is_moving = 0;
;
	sta     _is_moving
;
; else if (frame_count < 100)
;
	jmp     L0EB8
L0FC6:	lda     _frame_count
	cmp     #$64
	bcs     L0FC7
;
; BoxGuy1.direction = RIGHT;
;
	lda     #$01
	sta     _BoxGuy1+4
;
; else if (frame_count < 110)
;
	jmp     L0EB8
L0FC7:	lda     _frame_count
	cmp     #$6E
	bcs     L0FC8
;
; BoxGuy1.direction = LEFT;
;
	lda     #$00
	sta     _BoxGuy1+4
;
; is_moving = 0;
;
	sta     _is_moving
;
; else if (frame_count < 120)
;
	jmp     L0EB8
L0FC8:	lda     _frame_count
	cmp     #$78
	bcs     L0FC9
;
; BoxGuy1.direction = RIGHT;
;
	lda     #$01
	sta     _BoxGuy1+4
;
; else if (frame_count < 254 && BoxGuy1.X < 248)
;
	jmp     L0EB8
L0FC9:	lda     _frame_count
	cmp     #$FE
	bcs     L0EB8
	lda     _BoxGuy1
	cmp     #$F8
	bcs     L0EB8
;
; BoxGuy1.X += 2;
;
	lda     #$02
	clc
	adc     _BoxGuy1
	sta     _BoxGuy1
;
; oam_clear();
;
L0EB8:	jsr     _oam_clear
;
; draw_player_sprite();
;
	jmp     _draw_player_sprite
;
; }
;
L0E8B:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ init_mode_level_end (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_mode_level_end: near

.segment	"CODE"

;
; game_mode = MODE_LEVEL_END;
;
	lda     #$06
	sta     _game_mode
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; pal_bg(palette_perrytileset_a);
;
	lda     #<(_palette_perrytileset_a)
	ldx     #>(_palette_perrytileset_a)
	jsr     _pal_bg
;
; pal_spr(palette_perrypuzzlesprites_a);
;
	lda     #<(_palette_perrypuzzlesprites_a)
	ldx     #>(_palette_perrypuzzlesprites_a)
	jsr     _pal_spr
;
; bank_spr(1);
;
	lda     #$01
	jsr     _bank_spr
;
; set_scroll_y(0xff); // shift the bg down 1 pixel
;
	ldx     #$00
	lda     #$FF
	jsr     _set_scroll_y
;
; set_vram_buffer();
;
	jsr     _set_vram_buffer
;
; ppu_wait_nmi();
;
	jsr     _ppu_wait_nmi
;
; init_mode_title();
;
	jsr     _init_mode_title
;
; if (game_mode == MODE_TITLE)
;
L0FCD:	lda     _game_mode
	bne     L0FCE
;
; ppu_wait_nmi();
;
	jsr     _ppu_wait_nmi
;
; pad1 = pad_poll(0);
;
	lda     #$00
	jsr     _pad_poll
	sta     _pad1
;
; pad1_new = get_pad_new(0);
;
	lda     #$00
	jsr     _get_pad_new
	sta     _pad1_new
;
; title_cutscene();
;
	jsr     _title_cutscene
;
; if (pad1_new & PAD_START)
;
	lda     _pad1_new
	and     #$10
	beq     L0FCD
;
; level = 0; // debug this value
;
	lda     #$00
	sta     _level
;
; init_level();
;
	jsr     _init_level
;
; game_mode = MODE_GAME;
;
	lda     #$01
	sta     _game_mode
;
; else if (game_mode == MODE_GAME_OVER)
;
	jmp     L0FCD
L0FCE:	lda     _game_mode
	cmp     #$08
	bne     L0FCF
;
; ppu_wait_nmi();
;
	jsr     _ppu_wait_nmi
;
; pad1 = pad_poll(0);
;
	lda     #$00
	jsr     _pad_poll
	sta     _pad1
;
; pad1_new = get_pad_new(0);
;
	lda     #$00
	jsr     _get_pad_new
	sta     _pad1_new
;
; if (pad1_new & PAD_START)
;
	and     #$10
	beq     L0FCD
;
; game_mode = MODE_GAME;
;
	lda     #$01
	sta     _game_mode
;
; else if (game_mode == MODE_LEVEL_SELECT)
;
	jmp     L0FCD
L0FCF:	lda     _game_mode
	cmp     #$07
	bne     L0FD0
;
; ppu_wait_nmi();
;
	jsr     _ppu_wait_nmi
;
; pad1 = pad_poll(0);
;
	lda     #$00
	jsr     _pad_poll
	sta     _pad1
;
; pad1_new = get_pad_new(0);
;
	lda     #$00
	jsr     _get_pad_new
	sta     _pad1_new
;
; if (pad1_new & PAD_START)
;
	and     #$10
	beq     L0FCD
;
; game_mode = MODE_GAME;
;
	lda     #$01
	sta     _game_mode
;
; else if (game_mode == MODE_GAME)
;
	jmp     L0FCD
L0FD0:	lda     _game_mode
	cmp     #$01
	bne     L0FD1
;
; ppu_wait_nmi();
;
	jsr     _ppu_wait_nmi
;
; if (level == 3)
;
	lda     _level
	cmp     #$03
	bne     L0C51
;
; pad1 = pad_poll(1);     // read the first controller
;
	lda     #$01
	jsr     _pad_poll
	sta     _pad1
;
; pad1_new = get_pad_new(1); // newly pressed button. do pad_poll first
;
	lda     #$01
;
; else
;
	jmp     L0FD4
;
; pad1 = pad_poll(0);     // read the first controller
;
L0C51:	lda     #$00
	jsr     _pad_poll
	sta     _pad1
;
; pad1_new = get_pad_new(0); // newly pressed button. do pad_poll first
;
	lda     #$00
L0FD4:	jsr     _get_pad_new
	sta     _pad1_new
;
; movement();
;
	jsr     _movement
;
; draw_sprites();
;
	jsr     _draw_sprites
;
; else if (game_mode == MODE_LEVEL_END)
;
	jmp     L0FCD
L0FD1:	lda     _game_mode
	cmp     #$06
	bne     L0FD3
;
; for (index = 0; index < 100; ++index)
;
	lda     #$00
	sta     _index
L0FD2:	lda     _index
	cmp     #$64
	bcs     L0C66
;
; ppu_wait_nmi();
;
	jsr     _ppu_wait_nmi
;
; for (index = 0; index < 100; ++index)
;
	inc     _index
	jmp     L0FD2
;
; pal_fade_to(4, 0); // fade to black
;
L0C66:	lda     #$04
	jsr     pusha
	lda     #$00
	jsr     _pal_fade_to
;
; level_up();
;
	jsr     _level_up
;
; else
;
	jmp     L0FCD
;
; game_mode = MODE_TITLE;
;
L0FD3:	lda     #$00
	sta     _game_mode
;
; while (1)
;
	jmp     L0FCD

.endproc

